<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>com.github.thiagolocatelli</groupId>
	<artifactId>spring-cloud-playground-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>spring-cloud-playground-parent</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.5.RELEASE</version>
		<relativePath/>
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.SR1</spring-cloud.version>
		<io.springfox.version>2.9.2</io.springfox.version>
		<maven.resources.overwrite>true</maven.resources.overwrite>

		<docker.user>${DOCKER_USER}</docker.user>
	</properties>

	<modules>
        <module>cloud-services</module>
        <module>micro-services</module>
	<module>support-libraries</module>
    </modules>

	<dependencyManagement>

		<dependencies>
			<!-- Spring Dependencies -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- Project Dependencies -->
			<dependency>
				<groupId>com.github.thiagolocatelli.support</groupId>
				<artifactId>swagger-ui</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.thiagolocatelli.support</groupId>
				<artifactId>swagger-ui-resources</artifactId>
				<version>${project.version}</version>
			</dependency>
		</dependencies>

	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>1.4.9</version>
					<executions>
						<execution>
							<id>default</id>
							<goals>
								<goal>build</goal>
								<goal>push</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<repository>${docker.user}/${project.name}</repository>
						<tag>${project.version}</tag>
						<buildArgs>
							<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
						</buildArgs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>1.0-alpha-1</version>
					<executions>
						<execution>
							<phase>initialize</phase>
							<goals>
								<goal>read-project-properties</goal>
							</goals>
							<configuration>
								<files>
									<file>${session.executionRootDirectory}/.env</file>
								</files>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<delimiters>
							<delimiter>@</delimiter>
						</delimiters>
						<useDefaultDelimiters>false</useDefaultDelimiters>
						<overwrite>true</overwrite>
					</configuration>
					<executions>
						<execution>
							<id>copy-dockerfile-from-parent</id>
							<phase>initialize</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.basedir}</outputDirectory>
								<resources>
									<resource>
										<directory>${session.executionRootDirectory}/resources/docker</directory>
										<includes>
											<include>Dockerfile</include>
										</includes>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<id>copy-main-properties-from-parent</id>
							<phase>initialize</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.basedir}/src/main/resources</outputDirectory>
								<resources>
									<resource>
										<directory>${session.executionRootDirectory}/resources/properties/main</directory>
										<includes>
											<include>application-metrics.properties</include>
											<include>application-dev.properties</include>
										</includes>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<id>copy-test-properties-from-parent</id>
							<phase>initialize</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.basedir}/src/test/resources</outputDirectory>
								<resources>
									<resource>
										<directory>${session.executionRootDirectory}/resources/properties/test</directory>
										<includes>
											<include>application.properties</include>
											<include>logback.xml</include>
										</includes>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
