version: "3.3"

services:

  portainer:
    image: portainer/portainer
    ports:
      - "9999:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/portainer_data:/data
    command: --no-auth
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: '1000mb'
        reservations:
          cpus: '0.1'
          memory: '250mb'

  influx-db:
    image: influxdb:1.7.6
    ports:
      - 8086:8086
    volumes:
      - /var/lib/influxdb
    environment:
      INFLUXDB_USER: influxdb
      INFLUXDB_USER_PASSWORD: influxdb-pass
      INFLUXDB_DB: springboot
    healthcheck:
      test: "curl -f http://localhost:8086/ping"
      interval: 30s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: '1000mb'
        reservations:
          cpus: '0.1'
          memory: '250mb'

#  telegraf:
#    image: telegraf
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - $PWD/resources/config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
#    deploy:
#      replicas: 1
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: '1000mb'
#        reservations:
#          cpus: '0.1'
#          memory: '250mb'
#    depends_on:
#      - influx-db
#
#  chronograf:
#    image: chronograf
#    ports:
#      - 9002:8888
#    volumes:
#      - $PWD/resources/config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
#    environment:
#      influxdb-url: http://influx-db:8086
#    deploy:
#      replicas: 1
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: '1000mb'
#        reservations:
#          cpus: '0.1'
#          memory: '250mb'
#    depends_on:
#      - influx-db
#
#  grafana:
#    image: grafana/grafana:6.1.6
#    ports:
#      - 3000:3000
#    volumes:
#      - /var/lib/grafana
#    environment:
#      GF_SECURITY_ADMIN_PASSWORD: admin
#    deploy:
#      replicas: 1
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: '1000mb'
#        reservations:
#          cpus: '0.1'
#          memory: '250mb'
#    depends_on:
#      - influx-db

  discovery-service:
    image: ${DOCKER_USER}/discovery-service:0.0.1-SNAPSHOT
    environment:
      SPRING_PROFILES_ACTIVE: docker,metrics
    healthcheck:
      test: ["CMD-SHELL", "wget -q http://127.0.0.1:8888/actuator/health -O /dev/null"]
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - "8888:8888/tcp"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: '1000mb'
          cpus: '0.5'
        reservations:
          cpus: '0.1'
          memory: '250mb'

  api-gateway:
    image: ${DOCKER_USER}/api-gateway:0.0.1-SNAPSHOT
    environment:
      SPRING_PROFILES_ACTIVE: docker,metrics
    healthcheck:
      test: ["CMD-SHELL", "wget -q http://127.0.0.1:9000/actuator/health -O /dev/null"]
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - "9000:9000/tcp"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: '1000mb'
        reservations:
          cpus: '0.1'
          memory: '250mb'
    depends_on:
      - discovery-service

  proxy-gateway:
    image: ${DOCKER_USER}/proxy-gateway:0.0.1-SNAPSHOT
    environment:
      SPRING_PROFILES_ACTIVE: docker,metrics
    healthcheck:
      test: ["CMD-SHELL", "wget -q http://127.0.0.1:9001/actuator/health -O /dev/null"]
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - "9001:9001/tcp"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: '1000mb'
        reservations:
          cpus: '0.1'
          memory: '250mb'
    depends_on:
      - discovery-service

  user-service:
    image: ${DOCKER_USER}/user-service:0.0.1-SNAPSHOT
    environment:
      SPRING_PROFILES_ACTIVE: docker,metrics
    healthcheck:
      test: ["CMD-SHELL", "wget -q http://127.0.0.1:8081/actuator/health -O /dev/null"]
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - "8081:8081/tcp"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: '1000mb'
          cpus: '0.5'
        reservations:
          cpus: '0.1'
          memory: '250mb'
    depends_on:
      - user-db
      - discovery-service

  movie-service:
    image: ${DOCKER_USER}/movie-service:0.0.1-SNAPSHOT
    environment:
      SPRING_PROFILES_ACTIVE: docker,metrics
    healthcheck:
      test: ["CMD-SHELL", "wget -q http://127.0.0.1:8082/actuator/health -O /dev/null"]
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - "8082:8082/tcp"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: '1000mb'
          cpus: '0.5'
        reservations:
          cpus: '0.1'
          memory: '250mb'
    depends_on:
      - movie-db
      - discovery-service

  rating-service:
    image: ${DOCKER_USER}/rating-service:0.0.1-SNAPSHOT
    environment:
      SPRING_PROFILES_ACTIVE: docker,metrics
    healthcheck:
      test: ["CMD-SHELL", "wget -q http://127.0.0.1:8083/actuator/health -O /dev/null"]
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - "8083:8083/tcp"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: '1000mb'
          cpus: '0.5'
        reservations:
          cpus: '0.1'
          memory: '250mb'
    depends_on:
      - rating-db
      - discovery-service

  cart-service:
    image: ${DOCKER_USER}/cart-service:0.0.1-SNAPSHOT
    environment:
      SPRING_PROFILES_ACTIVE: docker,metrics
    healthcheck:
      test: ["CMD-SHELL", "wget -q http://127.0.0.1:8084/actuator/health -O /dev/null"]
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - "8084:8084/tcp"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: '1000mb'
          cpus: '0.5'
        reservations:
          cpus: '0.1'
          memory: '250mb'
    depends_on:
       - cart-db
       - discovery-service

  load-service:
    image: ${DOCKER_USER}/load-service:0.0.1-SNAPSHOT
    environment:
      SPRING_PROFILES_ACTIVE: docker,metrics
    healthcheck:
      test: ["CMD-SHELL", "wget -q http://127.0.0.1:8085/actuator/health -O /dev/null"]
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - "8085:8085/tcp"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: '1000mb'
          cpus: '0.5'
        reservations:
          cpus: '0.1'
          memory: '250mb'
    depends_on:
      - discovery-service

  user-db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: example
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - "5432/tcp"
    deploy:
      replicas: 1

  movie-db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: example
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - "5432/tcp"
    deploy:
      replicas: 1

  cart-db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: example
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - "5432/tcp"
    deploy:
      replicas: 1

  rating-db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: example
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - "5432/tcp"
    deploy:
      replicas: 1
